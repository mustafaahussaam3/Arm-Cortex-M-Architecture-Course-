
/*
 * Exercise 1 systick
 *
 * Eng Mohammed Tarek Course
 *
 * Advanced Embedded System
 *
 * Author: Mustafa Hussam Eldin
 */

#include "tm4c123gh6pm_registers.h"

#define Enable_Exceptions()  __asm(" CPSIE I ")
#define Disable_Exceptions() __asm(" CPSID I ")
#define Enable_Faults()      __asm(" CPSIE F ")
#define Disable_Faults()     __asm(" CPSIE F ")
//#define Wait_Until_Interrupt __asm(" WIF ")
#define NUMBER_OF_ITERATIONS_PER_ONE_MILI_SECOND 364

void Delay_MS(unsigned long long n)
{
    volatile unsigned long long count = 0;
    while(count++ < (NUMBER_OF_ITERATIONS_PER_ONE_MILI_SECOND * n) );
}

//PF0
void SW2_Init(void)
{
    GPIO_PORTF_LOCK_REG       = 0x4C4F434B;
    GPIO_PORTF_CR_REG        |= 0x01;
    GPIO_PORTF_AMSEL_REG     &= 0xFE;
    GPIO_PORTF_PCTL_REG      &= 0xFFFFFFF0;
    GPIO_PORTF_AFSEL_REG     &= 0xFE;
    GPIO_PORTF_DIR_REG       &= 0xFE;
    GPIO_PORTF_PUR_REG       |= 0x01;
    GPIO_PORTF_DEN_REG       |= 0x01;
    GPIO_PORTF_IS_REG        &= ~(1<<0);
    GPIO_PORTF_IBE_REG       &= ~(1<<0);
    GPIO_PORTF_IEV_REG       &= ~(1<<0);
    GPIO_PORTF_IM_REG        |= (1<<0);
//    GPIO_PORTF_RIS_REG

    NVIC_PRI7_REG    = 0x00400000
    NVIC_EN0_REG     = 0x40000000;
}

//PF1
void Led_Red_Init(void)
{
    GPIO_PORTF_AMSEL_REG    &= 0xFD;
    GPIO_PORTF_PCTL_REG     &= 0xFFFFFF0F;
    GPIO_PORTF_AFSEL_REG    &= 0xFD;
    GPIO_PORTF_DIR_REG      |= 0x02;
    GPIO_PORTF_DEN_REG      |= 0x02;
    GPIO_PORTF_DATA_REG     &= ~(1<<1);
}

//PF2
void Led_Blue_Init(void)
{
    GPIO_PORTF_AMSEL_REG    &= ~(1<<2);
    GPIO_PORTF_PCTL_REG     &= 0xFFFFF0FF;
    GPIO_PORTF_AFSEL_REG    &= ~(1<<2);
    GPIO_PORTF_DIR_REG      |= (1<<2);
    GPIO_PORTF_DEN_REG      |= (1<<2);
    GPIO_PORTF_DATA_REG     &= ~(1<<2);
}

//PF3
void Led_Green_Init(void)
{
    GPIO_PORTF_AMSEL_REG    &= ~(1<<3);
    GPIO_PORTF_PCTL_REG     &= 0xFFFF0FFF;
    GPIO_PORTF_AFSEL_REG    &= ~(1<<3);
    GPIO_PORTF_DIR_REG      |= (1<<3);
    GPIO_PORTF_DEN_REG      |= (1<<3);
    GPIO_PORTF_DATA_REG     &= ~(1<<3);
}

//PF4
void SW1_Init(void)
{
    GPIO_PORTF_AMSEL_REG     &= ~(1<<4);
    GPIO_PORTF_PCTL_REG      &= 0xFFF0FFFF;
    GPIO_PORTF_AFSEL_REG     &= ~(1<<4);
    GPIO_PORTF_DIR_REG       &= ~(1<<4);
    GPIO_PORTF_PUR_REG       |= (1<<4);
    GPIO_PORTF_DEN_REG       |= (1<<4);
}

void SysTick_Init(void)
{
    SYSTICK_CTRL_REG         &= ~(1<<0);
    SYSTICK_RELOAD_REG       = 7999999;
    SYSTICK_CURRENT_REG      = 0;
    SYSTICK_CTRL_REG         = 0x00000005;
}

void PortF_Int_Handler(void) //take void return void is handler
{
    GPIO_PORTF_DATA_REG |= (1<<1) | (1<<2) | (1<<3) ;
    Delay_MS(5000);
    GPIO_PORTF_ICR_REG |= (1<<0);

}

int main(void)
{
    SYSCTL_RCGC2_REG |= 0x00000020;
    while (!(SYSCTL_PRGPIO_REG & 0x20));


    SW2_Init();
    Led_Red_Init();
    Led_Green_Init();
    Led_Blue_Init();
    Enable_Exceptions();
    Enable_Faults();
    SysTick_Init();

    while (1)
    {
          GPIO_PORTF_DATA_REG = (GPIO_PORTF_DATA_REG & 0xF1) | 0x02;
          Delay_MS(1000);
          GPIO_PORTF_DATA_REG = (GPIO_PORTF_DATA_REG & 0xF1) | 0x04;
          Delay_MS(1000);
          GPIO_PORTF_DATA_REG = (GPIO_PORTF_DATA_REG & 0xF1) | 0x08;
          Delay_MS(1000);
    }
    return 0;
}
